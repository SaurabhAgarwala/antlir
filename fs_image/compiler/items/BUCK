load("//fs_image/bzl:defs.bzl", "target_location")
load("//fs_image/bzl:oss_shim.bzl", "python_library", "python_unittest")
load("//fs_image/compiler:defs.bzl", "TEST_IMAGE_PREFIX")

# Needs dedicated test coverage. For now, is covered by `test-items`.
python_library(
    name = "common",
    srcs = ["common.py"],
    base_module = "fs_image.compiler.items",
    deps = [
        "//fs_image:fs_utils",
        "//fs_image:subvol_utils",
        "//fs_image/compiler:enriched_namedtuple",
        "//fs_image/compiler:procfs_serde",
        "//fs_image/rpm:yum_conf",
    ],
)

# A helper for tests, so lacks its own tests.
python_library(
    name = "common_testlib",
    srcs = ["tests/common.py"],
    base_module = "fs_image.compiler.items",
    deps = [
        ":common",
        "//fs_image/btrfs_diff:testlib_render_subvols",
        "//fs_image/compiler:requires_provides",
    ],
)

python_library(
    name = "rpm_build",
    srcs = ["rpm_build.py"],
    base_module = "fs_image.compiler.items",
    deps = [
        ":common",
        "//fs_image:nspawn_in_subvol",
    ],
)

python_unittest(
    name = "test-rpm-build",
    srcs = ["tests/test_rpm_build.py"],
    base_module = "fs_image.compiler.items",
    needed_coverage = [(100, ":rpm_build")],
    resources = {
        target_location(
            TEST_IMAGE_PREFIX + "toy-rpm-build-rpmbuild-setup",
        ): "toy-rpmbuild-setup",
    },
    deps = [
        ":common_testlib",
        "//fs_image:common",
        "//fs_image:find_built_subvol",
        "//fs_image:testlib_temp_subvolumes",
    ],
)

# Split out since `nspawn-in-subvol` depends on it. Covered by `test-items`.
python_library(
    name = "mount_utils",
    srcs = ["mount_utils.py"],
    base_module = "fs_image.compiler.items",
    deps = ["//fs_image:subvol_utils"],
)

# Future: Finish splitting this library, and tests, by item.  The only
# challenge is to make sure that `common.py` gets coverage -- coverage of
# its functions is currently distributed across various items.
python_library(
    name = "items",
    srcs = [
        "common.py",
        "install_file.py",
        "make_dirs.py",
        "make_subvol.py",
        "mount.py",
        "phases_provide.py",
        "remove_path.py",
        "rpm_action.py",
        "stat_options.py",
        "symlink.py",
        "tarball.py",
    ],
    base_module = "fs_image.compiler.items",
    deps = [
        ":common",
        ":mount_utils",
        "//fs_image:nspawn_in_subvol",
        "//fs_image/compiler:requires_provides",
        "//fs_image/compiler:subvolume_on_disk",
        "//fs_image/rpm:rpm_metadata",
    ],
)

python_unittest(
    name = "test-items",
    srcs = [
        "tests/test_common.py",
        "tests/test_install_file.py",
        "tests/test_make_dirs.py",
        "tests/test_make_subvol.py",
        "tests/test_mount.py",
        "tests/test_phases_provide.py",
        "tests/test_remove_path.py",
        "tests/test_rpm_action.py",
        "tests/test_symlink.py",
        "tests/test_tarball.py",
    ],
    base_module = "fs_image.compiler.items",
    needed_coverage = [
        (100, ":common"),
        (100, ":items"),
        (100, ":mount_utils"),
    ],
    # "fastzip" would break :volume_for_repo in @mode/opt.  "xar" fails
    # since `root` cannot access the content of an unprivileged XAR.
    par_style = "zip",
    resources = {
        "//fs_image/build_appliance/facebook:fb_build_appliance_testing": "tests/fb-test-build-appliance",
        "//fs_image/build_appliance/facebook:fb_host_build_appliance_testing": "tests/fb-host-test-build-appliance",
        TEST_IMAGE_PREFIX + "create_ops-original.sendstream": "tests/create_ops.sendstream",
        TEST_IMAGE_PREFIX + "fake-build-appliance-from-host": "tests/host-test-build-appliance",
        TEST_IMAGE_PREFIX + "layer-with-only-one-locally-installed-rpm": "tests/test-with-one-local-rpm",
        TEST_IMAGE_PREFIX + "rpm-test-cheese-1-1.rpm": "tests/rpm-test-cheese-1-1.rpm",
        TEST_IMAGE_PREFIX + "rpm-test-cheese-2-1.rpm": "tests/rpm-test-cheese-2-1.rpm",
    },
    deps = [
        ":common_testlib",
        ":items",
        "//fs_image:find_built_subvol",
        "//fs_image:testlib_temp_subvolumes",
        "//fs_image/btrfs_diff:testlib_demo_sendstreams",
        "//fs_image/rpm:rpm_metadata",
    ],
)
